version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        STACK_NAME: ${STACK_NAME}
        ENABLE_FINANCIAL: ${ENABLE_FINANCIAL:-false}
        GERENCIANET_PIX_CERT: ${GERENCIANET_PIX_CERT:-production-cert}
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    environment:
      BACKEND_URL: ${BACKEND_URL}
      FRONTEND_URL: ${FRONTEND_URL}
      ENABLE_FINANCIAL: ${ENABLE_FINANCIAL:-false}
      GERENCIANET_SANDBOX: ${GERENCIANET_SANDBOX:-false}
      GERENCIANET_PIX_CERT: ${GERENCIANET_PIX_CERT:-production-cert}
      GERENCIANET_CLIENT_ID: ${GERENCIANET_CLIENT_ID}
      GERENCIANET_CLIENT_SECRET: ${GERENCIANET_CLIENT_SECRET}
      GERENCIANET_PIX_KEY: ${GERENCIANET_PIX_KEY}
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: "${BACKEND_CPU_LIMIT:-0.5}"
          memory: "${BACKEND_MEM_LIMIT:-512}M"
        reservations:
          cpus: "${BACKEND_CPU_RESERVE:-0.25}"
          memory: "${BACKEND_MEM_RESERVE:-256}M"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_BACKEND_URL: ${BACKEND_URL}
        REACT_APP_HOURS_CLOSE_TICKETS_AUTO: 24
        STACK_NAME: ${STACK_NAME}
        REACT_APP_COLOR: ${COLOR}
        REACT_APP_TAB_NAME: ${TAB_NAME}
    ports:
      - "${FRONTEND_PORT:-3001}:3001"
    depends_on:
      - backend
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: "${FRONTEND_CPU_LIMIT:-0.5}"
          memory: "${FRONTEND_MEM_LIMIT:-512}M"
        reservations:
          cpus: "${FRONTEND_CPU_RESERVE:-0.25}"
          memory: "${FRONTEND_MEM_RESERVE:-256}M"

  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_DB: codatende
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: "${POSTGRES_CPU_LIMIT:-0.5}"
          memory: "${POSTGRES_MEM_LIMIT:-512}M"
        reservations:
          cpus: "${POSTGRES_CPU_RESERVE:-0.25}"
          memory: "${POSTGRES_MEM_RESERVE:-256}M"

  redis:
    image: redis:alpine
    command: redis-server --requirepass francaut0
    volumes:
      - redis_data:/data
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: "${REDIS_CPU_LIMIT:-0.2}"
          memory: "${REDIS_MEM_LIMIT:-256}M"
        reservations:
          cpus: "${REDIS_CPU_RESERVE:-0.1}"
          memory: "${REDIS_MEM_RESERVE:-128}M"

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
